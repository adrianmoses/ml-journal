{
  
    
        "post0": {
            "title": "Mastering Spacy Ch. 1",
            "content": "import spacy . !python -m spacy download en . ⚠ As of spaCy v3.0, shortcuts like &#39;en&#39; are deprecated. Please use the full pipeline package name &#39;en_core_web_sm&#39; instead. Collecting en-core-web-sm==3.1.0 Downloading https://github.com/explosion/spacy-models/releases/download/en_core_web_sm-3.1.0/en_core_web_sm-3.1.0-py3-none-any.whl (13.6 MB) |████████████████████████████████| 13.6 MB 7.4 MB/s Requirement already satisfied: spacy&lt;3.2.0,&gt;=3.1.0 in /Users/adrianmoses/opt/anaconda3/lib/python3.8/site-packages (from en-core-web-sm==3.1.0) (3.1.2) Requirement already satisfied: typer&lt;0.4.0,&gt;=0.3.0 in /Users/adrianmoses/opt/anaconda3/lib/python3.8/site-packages (from spacy&lt;3.2.0,&gt;=3.1.0-&gt;en-core-web-sm==3.1.0) (0.3.2) Requirement already satisfied: packaging&gt;=20.0 in /Users/adrianmoses/opt/anaconda3/lib/python3.8/site-packages (from spacy&lt;3.2.0,&gt;=3.1.0-&gt;en-core-web-sm==3.1.0) (20.9) Requirement already satisfied: numpy&gt;=1.15.0 in /Users/adrianmoses/opt/anaconda3/lib/python3.8/site-packages (from spacy&lt;3.2.0,&gt;=3.1.0-&gt;en-core-web-sm==3.1.0) (1.20.1) Requirement already satisfied: setuptools in /Users/adrianmoses/opt/anaconda3/lib/python3.8/site-packages (from spacy&lt;3.2.0,&gt;=3.1.0-&gt;en-core-web-sm==3.1.0) (52.0.0.post20210125) Requirement already satisfied: preshed&lt;3.1.0,&gt;=3.0.2 in /Users/adrianmoses/opt/anaconda3/lib/python3.8/site-packages (from spacy&lt;3.2.0,&gt;=3.1.0-&gt;en-core-web-sm==3.1.0) (3.0.5) Requirement already satisfied: srsly&lt;3.0.0,&gt;=2.4.1 in /Users/adrianmoses/opt/anaconda3/lib/python3.8/site-packages (from spacy&lt;3.2.0,&gt;=3.1.0-&gt;en-core-web-sm==3.1.0) (2.4.1) Requirement already satisfied: catalogue&lt;2.1.0,&gt;=2.0.4 in /Users/adrianmoses/opt/anaconda3/lib/python3.8/site-packages (from spacy&lt;3.2.0,&gt;=3.1.0-&gt;en-core-web-sm==3.1.0) (2.0.6) Requirement already satisfied: spacy-legacy&lt;3.1.0,&gt;=3.0.7 in /Users/adrianmoses/opt/anaconda3/lib/python3.8/site-packages (from spacy&lt;3.2.0,&gt;=3.1.0-&gt;en-core-web-sm==3.1.0) (3.0.8) Requirement already satisfied: murmurhash&lt;1.1.0,&gt;=0.28.0 in /Users/adrianmoses/opt/anaconda3/lib/python3.8/site-packages (from spacy&lt;3.2.0,&gt;=3.1.0-&gt;en-core-web-sm==3.1.0) (1.0.5) Requirement already satisfied: thinc&lt;8.1.0,&gt;=8.0.8 in /Users/adrianmoses/opt/anaconda3/lib/python3.8/site-packages (from spacy&lt;3.2.0,&gt;=3.1.0-&gt;en-core-web-sm==3.1.0) (8.0.10) Requirement already satisfied: pydantic!=1.8,!=1.8.1,&lt;1.9.0,&gt;=1.7.4 in /Users/adrianmoses/opt/anaconda3/lib/python3.8/site-packages (from spacy&lt;3.2.0,&gt;=3.1.0-&gt;en-core-web-sm==3.1.0) (1.8.2) Requirement already satisfied: blis&lt;0.8.0,&gt;=0.4.0 in /Users/adrianmoses/opt/anaconda3/lib/python3.8/site-packages (from spacy&lt;3.2.0,&gt;=3.1.0-&gt;en-core-web-sm==3.1.0) (0.7.4) Requirement already satisfied: pathy&gt;=0.3.5 in /Users/adrianmoses/opt/anaconda3/lib/python3.8/site-packages (from spacy&lt;3.2.0,&gt;=3.1.0-&gt;en-core-web-sm==3.1.0) (0.6.0) Requirement already satisfied: jinja2 in /Users/adrianmoses/opt/anaconda3/lib/python3.8/site-packages (from spacy&lt;3.2.0,&gt;=3.1.0-&gt;en-core-web-sm==3.1.0) (2.11.3) Requirement already satisfied: requests&lt;3.0.0,&gt;=2.13.0 in /Users/adrianmoses/opt/anaconda3/lib/python3.8/site-packages (from spacy&lt;3.2.0,&gt;=3.1.0-&gt;en-core-web-sm==3.1.0) (2.25.1) Requirement already satisfied: tqdm&lt;5.0.0,&gt;=4.38.0 in /Users/adrianmoses/opt/anaconda3/lib/python3.8/site-packages (from spacy&lt;3.2.0,&gt;=3.1.0-&gt;en-core-web-sm==3.1.0) (4.59.0) Requirement already satisfied: cymem&lt;2.1.0,&gt;=2.0.2 in /Users/adrianmoses/opt/anaconda3/lib/python3.8/site-packages (from spacy&lt;3.2.0,&gt;=3.1.0-&gt;en-core-web-sm==3.1.0) (2.0.5) Requirement already satisfied: wasabi&lt;1.1.0,&gt;=0.8.1 in /Users/adrianmoses/opt/anaconda3/lib/python3.8/site-packages (from spacy&lt;3.2.0,&gt;=3.1.0-&gt;en-core-web-sm==3.1.0) (0.8.2) Requirement already satisfied: pyparsing&gt;=2.0.2 in /Users/adrianmoses/opt/anaconda3/lib/python3.8/site-packages (from packaging&gt;=20.0-&gt;spacy&lt;3.2.0,&gt;=3.1.0-&gt;en-core-web-sm==3.1.0) (2.4.7) Requirement already satisfied: smart-open&lt;6.0.0,&gt;=5.0.0 in /Users/adrianmoses/opt/anaconda3/lib/python3.8/site-packages (from pathy&gt;=0.3.5-&gt;spacy&lt;3.2.0,&gt;=3.1.0-&gt;en-core-web-sm==3.1.0) (5.2.1) Requirement already satisfied: typing-extensions&gt;=3.7.4.3 in /Users/adrianmoses/opt/anaconda3/lib/python3.8/site-packages (from pydantic!=1.8,!=1.8.1,&lt;1.9.0,&gt;=1.7.4-&gt;spacy&lt;3.2.0,&gt;=3.1.0-&gt;en-core-web-sm==3.1.0) (3.7.4.3) Requirement already satisfied: idna&lt;3,&gt;=2.5 in /Users/adrianmoses/opt/anaconda3/lib/python3.8/site-packages (from requests&lt;3.0.0,&gt;=2.13.0-&gt;spacy&lt;3.2.0,&gt;=3.1.0-&gt;en-core-web-sm==3.1.0) (2.10) Requirement already satisfied: certifi&gt;=2017.4.17 in /Users/adrianmoses/opt/anaconda3/lib/python3.8/site-packages (from requests&lt;3.0.0,&gt;=2.13.0-&gt;spacy&lt;3.2.0,&gt;=3.1.0-&gt;en-core-web-sm==3.1.0) (2020.12.5) Requirement already satisfied: chardet&lt;5,&gt;=3.0.2 in /Users/adrianmoses/opt/anaconda3/lib/python3.8/site-packages (from requests&lt;3.0.0,&gt;=2.13.0-&gt;spacy&lt;3.2.0,&gt;=3.1.0-&gt;en-core-web-sm==3.1.0) (4.0.0) Requirement already satisfied: urllib3&lt;1.27,&gt;=1.21.1 in /Users/adrianmoses/opt/anaconda3/lib/python3.8/site-packages (from requests&lt;3.0.0,&gt;=2.13.0-&gt;spacy&lt;3.2.0,&gt;=3.1.0-&gt;en-core-web-sm==3.1.0) (1.26.4) Requirement already satisfied: click&lt;7.2.0,&gt;=7.1.1 in /Users/adrianmoses/opt/anaconda3/lib/python3.8/site-packages (from typer&lt;0.4.0,&gt;=0.3.0-&gt;spacy&lt;3.2.0,&gt;=3.1.0-&gt;en-core-web-sm==3.1.0) (7.1.2) Requirement already satisfied: MarkupSafe&gt;=0.23 in /Users/adrianmoses/opt/anaconda3/lib/python3.8/site-packages (from jinja2-&gt;spacy&lt;3.2.0,&gt;=3.1.0-&gt;en-core-web-sm==3.1.0) (1.1.1) ✔ Download and installation successful You can now load the package via spacy.load(&#39;en_core_web_sm&#39;) . nlp = spacy.load(&#39;en_core_web_sm&#39;) doc = nlp(&#39;I have a ginger cat.&#39;) . doc . I have a ginger cat. . DisplaCy . Let&#39;s take a look at the POS tagging and tokens with the Dispacy graphics . from spacy import displacy doc = nlp(&#39;Bill Gates is the CEO of Microsoft&#39;) displacy.render(doc, style=&#39;dep&#39;) . Bill PROPN Gates PROPN is AUX the DET CEO NOUN of ADP Microsoft PROPN compound nsubj det attr prep pobj",
            "url": "https://adrianmoses.github.io/ml-journal/2021/09/23/mastering-spacy-chapter-1.html",
            "relUrl": "/2021/09/23/mastering-spacy-chapter-1.html",
            "date": " • Sep 23, 2021"
        }
        
    
  
    
        ,"post1": {
            "title": "Intro to NLP",
            "content": "This course appears a bit more hands-on as it starts off with introducing spacy. spacy.load code examples are added . !pip install spacy !python -m spacy download en . import spacy nlp = spacy.load(&#39;en_core_web_sm&#39;) . doc = nlp(&quot;Tea is healthy and calming, don&#39;t you think?&quot;) . for token in doc: print(token) . Tea is healthy and calming , do n&#39;t you think ? . These are token objects. A token object has the lemmatization with token.lemma_ and if it&#39;s a stop word token.is_stop . print(f&quot;Token t tLemma t tStopword&quot;.format(&#39;Token&#39;, &#39;Lemma&#39;, &#39;Stopword&#39;)) print(&quot;-&quot;*40) for token in doc: print(f&quot;{str(token)} t t{token.lemma_} t t{token.is_stop}&quot;) . Token Lemma Stopword - Tea tea False is be True healthy healthy False and and True calming calm False , , False do do True n&#39;t n&#39;t True you you True think think False ? ? False . Lemmatization and Stopwords can be helpful, but also detrimental to a model&#39;s performance. Consider it as hyperparameters for tweaking the performance of a model. . Pattern Matching . Spacy has pattern matching capabilities that are easier to use then Regex . from spacy.matcher import PhraseMatcher matcher = PhraseMatcher(nlp.vocab, attr=&#39;LOWER&#39;) . Matchers depend on a vocabulary model, so the english model above was used. attr=&#39;LOWER&#39; lowers all text ensuring case insentivity . Convert the terms we need to match to documents and add to the matcher . terms = [&#39;Galaxy Note&#39;, &#39;iPhone 11&#39;, &#39;iPhone XS&#39;, &#39;Google Pixel&#39;] patterns = [nlp(text) for text in terms] matcher.add(&quot;TerminologyList&quot;, patterns) . text_doc = nlp(&quot;Glowing review overall, and some really interesting side-by-side &quot; &quot;photography tests pitting the iPhone 11 Pro against the &quot; &quot;Galaxy Note 10 Plus and last year&#39;s iPhone XS and Google Pixel 3.&quot;) matches = matcher(text_doc) print(matches) . [(3766102292120407359, 17, 19), (3766102292120407359, 22, 24), (3766102292120407359, 30, 32), (3766102292120407359, 33, 35)] . A match is a tuple of (match_id, start_pos, end_pos) . match_id, start, end = matches[0] print(nlp.vocab.strings[match_id], text_doc[start:end]) . TerminologyList iPhone 11 . Text Classification . Machines need numeric representations of text. . One way to convert a sentence or phrase to a numeric represneataiotion is to count the occurances of a word in a document Then the vector is the length of every word in the entire corpus. A variation of one-hot encoding. . This is called bag of words . Another approach is by scaling the term count by the overall term&#39;s frequency in the corpus. The name of that representation is called TF-IDF or Term Frequency - Inverse Document Frequency . spacy can support bag of words with the TextCategorizer . nlp = spacy.blank(&quot;en&quot;) textcat = nlp.create_pipe(&quot;textcat&quot;, config={ &quot;exclusive_classes&quot;: True, &quot;architecture&quot;: &quot;bow&quot; }) nlp.add_pipe(textcat) . ConfigValidationError Traceback (most recent call last) &lt;ipython-input-14-b892f9c822da&gt; in &lt;module&gt; 1 nlp = spacy.blank(&#34;en&#34;) 2 -&gt; 3 textcat = nlp.create_pipe(&#34;textcat&#34;, config={ 4 &#34;exclusive_classes&#34;: True, 5 &#34;architecture&#34;: &#34;bow&#34; ~/opt/anaconda3/lib/python3.8/site-packages/spacy/language.py in create_pipe(self, factory_name, name, config, raw_config, validate) 659 # We&#39;re calling the internal _fill here to avoid constructing the 660 # registered functions twice --&gt; 661 resolved = registry.resolve(cfg, validate=validate) 662 filled = registry.fill({&#34;cfg&#34;: cfg[factory_name]}, validate=validate)[&#34;cfg&#34;] 663 filled = Config(filled) ~/opt/anaconda3/lib/python3.8/site-packages/thinc/config.py in resolve(cls, config, schema, overrides, validate) 727 validate: bool = True, 728 ) -&gt; Dict[str, Any]: --&gt; 729 resolved, _ = cls._make( 730 config, schema=schema, overrides=overrides, validate=validate, resolve=True 731 ) ~/opt/anaconda3/lib/python3.8/site-packages/thinc/config.py in _make(cls, config, schema, overrides, resolve, validate) 776 if not is_interpolated: 777 config = Config(orig_config).interpolate() --&gt; 778 filled, _, resolved = cls._fill( 779 config, schema, validate=validate, overrides=overrides, resolve=resolve 780 ) ~/opt/anaconda3/lib/python3.8/site-packages/thinc/config.py in _fill(cls, config, schema, validate, resolve, parent, overrides) 831 schema.__fields__[key] = copy_model_field(field, Any) 832 promise_schema = cls.make_promise_schema(value, resolve=resolve) --&gt; 833 filled[key], validation[v_key], final[key] = cls._fill( 834 value, 835 promise_schema, ~/opt/anaconda3/lib/python3.8/site-packages/thinc/config.py in _fill(cls, config, schema, validate, resolve, parent, overrides) 897 result = schema.parse_obj(validation) 898 except ValidationError as e: --&gt; 899 raise ConfigValidationError( 900 config=config, errors=e.errors(), parent=parent 901 ) from None ConfigValidationError: Config validation error textcat -&gt; architecture extra fields not permitted textcat -&gt; exclusive_classes extra fields not permitted {&#39;nlp&#39;: &lt;spacy.lang.en.English object at 0x7fdf109c6fa0&gt;, &#39;name&#39;: &#39;textcat&#39;, &#39;architecture&#39;: &#39;bow&#39;, &#39;exclusive_classes&#39;: True, &#39;model&#39;: {&#39;@architectures&#39;: &#39;spacy.TextCatEnsemble.v2&#39;, &#39;linear_model&#39;: {&#39;@architectures&#39;: &#39;spacy.TextCatBOW.v2&#39;, &#39;exclusive_classes&#39;: True, &#39;ngram_size&#39;: 1, &#39;no_output_layer&#39;: False}, &#39;tok2vec&#39;: {&#39;@architectures&#39;: &#39;spacy.Tok2Vec.v2&#39;, &#39;embed&#39;: {&#39;@architectures&#39;: &#39;spacy.MultiHashEmbed.v2&#39;, &#39;width&#39;: 64, &#39;rows&#39;: [2000, 2000, 1000, 1000, 1000, 1000], &#39;attrs&#39;: [&#39;ORTH&#39;, &#39;LOWER&#39;, &#39;PREFIX&#39;, &#39;SUFFIX&#39;, &#39;SHAPE&#39;, &#39;ID&#39;], &#39;include_static_vectors&#39;: False}, &#39;encode&#39;: {&#39;@architectures&#39;: &#39;spacy.MaxoutWindowEncoder.v2&#39;, &#39;width&#39;: 64, &#39;window_size&#39;: 1, &#39;maxout_pieces&#39;: 3, &#39;depth&#39;: 2}}}, &#39;threshold&#39;: 0.5, &#39;@factories&#39;: &#39;textcat&#39;} .",
            "url": "https://adrianmoses.github.io/ml-journal/jupyter/2021/09/18/intro-to-nlp.html",
            "relUrl": "/jupyter/2021/09/18/intro-to-nlp.html",
            "date": " • Sep 18, 2021"
        }
        
    
  
    
        ,"post2": {
            "title": "An Example Markdown Post",
            "content": "Example Markdown Post . Basic setup . Jekyll requires blog post files to be named according to the following format: . YEAR-MONTH-DAY-filename.md . Where YEAR is a four-digit number, MONTH and DAY are both two-digit numbers, and filename is whatever file name you choose, to remind yourself what this post is about. .md is the file extension for markdown files. . The first line of the file should start with a single hash character, then a space, then your title. This is how you create a “level 1 heading” in markdown. Then you can create level 2, 3, etc headings as you wish but repeating the hash character, such as you see in the line ## File names above. . Basic formatting . You can use italics, bold, code font text, and create links. Here’s a footnote 1. Here’s a horizontal rule: . . Lists . Here’s a list: . item 1 | item 2 | . And a numbered list: . item 1 | item 2 | Boxes and stuff . This is a quotation . . You can include alert boxes …and… . . You can include info boxes Images . . Code . You can format text and code per usual . General preformatted text: . # Do a thing do_thing() . Python code and output: . # Prints &#39;2&#39; print(1+1) . 2 . Formatting text as shell commands: . echo &quot;hello world&quot; ./some_script.sh --option &quot;value&quot; wget https://example.com/cat_photo1.png . Formatting text as YAML: . key: value - another_key: &quot;another value&quot; . Tables . Column 1 Column 2 . A thing | Another thing | . Tweetcards . Altair 4.0 is released! https://t.co/PCyrIOTcvvTry it with: pip install -U altairThe full list of changes is at https://t.co/roXmzcsT58 ...read on for some highlights. pic.twitter.com/vWJ0ZveKbZ . &mdash; Jake VanderPlas (@jakevdp) December 11, 2019 Footnotes . This is the footnote. &#8617; . |",
            "url": "https://adrianmoses.github.io/ml-journal/markdown/2020/01/14/test-markdown-post.html",
            "relUrl": "/markdown/2020/01/14/test-markdown-post.html",
            "date": " • Jan 14, 2020"
        }
        
    
  

  
  

  
      ,"page1": {
          "title": "About Me",
          "content": "This website is powered by fastpages 1. . a blogging platform that natively supports Jupyter notebooks in addition to other formats. &#8617; . |",
          "url": "https://adrianmoses.github.io/ml-journal/about/",
          "relUrl": "/about/",
          "date": ""
      }
      
  

  

  
  

  

  
  

  

  
  

  
  

  
  

  
      ,"page10": {
          "title": "",
          "content": "Sitemap: {{ “sitemap.xml” | absolute_url }} | .",
          "url": "https://adrianmoses.github.io/ml-journal/robots.txt",
          "relUrl": "/robots.txt",
          "date": ""
      }
      
  

}